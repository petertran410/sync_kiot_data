generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id                      Int                       @id @default(autoincrement())
  kiotVietId              Int?                      @unique
  name                    String
  parentId                Int?
  retailerId              Int?
  createdDate             DateTime                  @default(now())
  modifiedDate            DateTime                  @updatedAt
  lastSyncedAt            DateTime                  @default(now())
  hasChild                Boolean                   @default(false)
  rank                    Int?
  parent_name             String?                   @db.VarChar(255)
  child_name              String?                   @db.VarChar(255)
  branch_name             String?                   @db.VarChar(255)
  parent                  Category?                 @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children                Category[]                @relation("CategoryHierarchy")
  VoucherCampaignCategory VoucherCampaignCategory[]

  products                Product[]

  @@index([kiotVietId])
  @@index([parentId])
  @@index([lastSyncedAt])
}

model Product {
  id                   Int                      @id @default(autoincrement())
  kiotVietId           BigInt                   @unique
  code                 String
  barCode              String?
  name                 String
  fullName             String
  categoryId           Int?
  categoryName         String?
  parent_name          String?
  child_name           String?
  branch_name          String?
  tradeMarkId          Int?
  type                 Int?
  description          String?
  allowsSale           Boolean                  @default(true)
  hasVariants          Boolean                  @default(false)
  basePrice            Decimal?                 @db.Decimal(15, 2)
  unit                 String?
  masterProductId      BigInt?
  masterUnitId         BigInt?
  conversionValue      Float?
  weight               Float?
  isLotSerialControl   Boolean                  @default(false)
  isBatchExpireControl Boolean                  @default(false)
  orderTemplate        String?
  minQuantity          Int?
  maxQuantity          Int?
  isRewardPoint        Boolean                  @default(true)
  isActive             Boolean                  @default(true)
  retailerId           Int?
  createdDate          DateTime                 @default(now())
  modifiedDate         DateTime                 @updatedAt
  lastSyncedAt         DateTime                 @default(now())
  larkRecordId         String?
  larkSyncRetries      Int                      @default(0)
  larkSyncStatus       LarkSyncStatus           @default(PENDING)
  larkSyncedAt         DateTime?
  tradeMarkName        String?
  invoiceDetails       InvoiceDetail[]
  orderDetails         OrderDetail[]
  orderSupplierDetails OrderSupplierDetail[]
  priceBookDetails     PriceBookDetail[]
  attributes           ProductAttribute[]
  images               ProductImage[]
  inventories          ProductInventory[]
  purchaseOrderDetails PurchaseOrderDetail[]
  returnDetails        ReturnDetail[]
  transferDetails      TransferDetail[]
  voucherCampaigns     VoucherCampaignProduct[]

  category             Category?                @relation(fields: [categoryId], references: [id])
  tradeMark            TradeMark?               @relation(fields: [tradeMarkId], references: [id])

  @@index([kiotVietId])
  @@index([code])
  @@index([categoryId])
}

model ProductAttribute {
  id             Int      @id @default(autoincrement())
  productId      Int
  attributeName  String
  attributeValue String
  lineNumber     Int
  lastSyncedAt   DateTime @default(now())
  product        Product  @relation(fields: [productId], references: [id])

  @@unique([productId, lineNumber])
  @@index([productId])
}

model ProductImage {
  id           Int      @id @default(autoincrement())
  productId    Int
  lineNumber   Int
  lastSyncedAt DateTime @default(now())
  imageUrl     Json?
  product      Product  @relation(fields: [productId], references: [id])

  @@unique([productId, lineNumber])
  @@index([productId])
}

model ProductInventory {
  id             Int      @id @default(autoincrement())
  productId      Int
  branchId       Int?
  onHand         Int?
  reserved       Int?
  onOrder        Int?
  cost           Decimal? @db.Decimal(15, 2)
  minQuantity    Int?
  maxQuantity    Int?
  modifiedDate   DateTime @updatedAt
  lastSyncedAt   DateTime @default(now())
  branchName     String?
  productCode    String?
  productName    String?
  actualReserved Int?
  isActive       Boolean?
  lineNumber     Int?
  product        Product  @relation(fields: [productId], references: [id])

  @@unique([productId, lineNumber])
  @@index([productId])
  @@index([branchId])
}

model Customer {
  id                    Int                     @id @default(autoincrement())
  kiotVietId            BigInt?                 @unique
  code                  String
  name                  String
  type                  Int?
  gender                Boolean?
  birthDate             DateTime?
  contactNumber         String?
  subNumber             String?
  identificationNumber  String?
  address               String?
  locationName          String?
  wardName              String?
  email                 String?
  organization          String?
  taxCode               String?
  comments              String?
  debt                  Decimal?                @db.Decimal(15, 2)
  totalInvoiced         Decimal?                @db.Decimal(15, 2)
  totalPoint            Float?
  totalRevenue          Decimal?                @db.Decimal(15, 2)
  rewardPoint           BigInt?
  psidFacebook          BigInt?
  retailerId            Int?
  branchId              Int?
  isActive              Boolean                 @default(true)
  createdDate           DateTime?
  modifiedDate          DateTime?
  lastSyncedAt          DateTime                @default(now())
  larkRecordId          String?
  larkSyncRetries       Int                     @default(0)
  larkSyncStatus        LarkSyncStatus          @default(PENDING)
  larkSyncedAt          DateTime?
  groups                String?
  branch                Branch?                 @relation(fields: [branchId], references: [id])
  CustomerGroupRelation CustomerGroupRelation[]
  invoices              Invoice[]
  orders                Order[]
  Return                Return[]

  @@index([kiotVietId])
  @@index([code])
  @@index([lastSyncedAt])
  @@index([larkSyncStatus])
  @@index([branchId])
  @@index([groups])
}

model CustomerGroup {
  id                     Int                      @id @default(autoincrement())
  kiotVietId             Int                      @unique
  name                   String
  description            String?
  discount               Int?
  retailerId             Int?
  createdDate            DateTime
  lastSyncedAt           DateTime                 @default(now())
  createdBy              Int?
  CustomerGroupRelation  CustomerGroupRelation[]
  PriceBookCustomerGroup PriceBookCustomerGroup[]

  @@index([kiotVietId])
}

model CustomerGroupRelation {
  id              Int           @id @default(autoincrement())
  kiotVietId      BigInt?       @unique
  customerId      Int
  customerGroupId Int
  CustomerGroup   CustomerGroup @relation(fields: [customerGroupId], references: [id])
  customer        Customer      @relation(fields: [customerId], references: [id])

  @@unique([customerId, customerGroupId])
  @@index([customerId])
  @@index([customerGroupId])
}

model Branch {
  id               Int                     @id @default(autoincrement())
  kiotVietId       Int                     @unique
  name             String
  code             String?
  contactNumber    String?
  subContactNumber String?
  email            String?
  address          String?
  location         String?
  wardName         String?
  isActive         Boolean                 @default(true)
  isLock           Boolean                 @default(false)
  retailerId       Int?
  createdDate      DateTime                @default(now())
  modifiedDate     DateTime                @updatedAt
  lastSyncedAt     DateTime                @default(now())
  Cashflow         Cashflow[]
  customers        Customer[]
  Invoice          Invoice[]
  Order            Order[]
  orderSuppliers   OrderSupplier[]
  priceBooks       PriceBookBranch[]
  purchaseOrders   PurchaseOrder[]
  returns          Return[]
  transfersFrom    Transfer[]              @relation("SourceBranch")
  transfersTo      Transfer[]              @relation("DestinationBranch")
  voucherCampaigns VoucherCampaignBranch[]
  invoices         Invoice[]               @relation("BranchInvoices")
  orders           Order[]                 @relation("BranchOrders")

  @@index([kiotVietId])
}

model User {
  id               Int                   @id @default(autoincrement())
  kiotVietId       BigInt                @unique
  userName         String
  givenName        String
  mobilePhone      String?
  email            String?
  retailerId       Int?
  createdDate      DateTime
  invoices         Invoice[]             @relation("InvoiceSoldBy")
  orders           Order[]               @relation("OrderSoldBy")
  priceBooks       PriceBookUser[]
  voucherCampaigns VoucherCampaignUser[]

  @@index([kiotVietId])
  // Cashflow Cashflow[]
}

model Order {
  id               Int              @id @default(autoincrement())
  kiotVietId       BigInt           @unique
  code             String           @unique
  purchaseDate     DateTime
  branchId         Int?
  soldById         BigInt?
  cashierId        BigInt?
  customerId       Int?
  total            Decimal          @db.Decimal(15, 2)
  totalPayment     Decimal          @db.Decimal(15, 2)
  discount         Decimal?         @db.Decimal(15, 2)
  discountRatio    Float?
  status           Int?
  description      String?
  usingCod         Boolean          @default(false)
  saleChannelId    Int?
  expectedDelivery DateTime?
  retailerId       Int?
  createdDate      DateTime?
  modifiedDate     DateTime?
  lastSyncedAt     DateTime         @default(now())
  larkRecordId     String?
  larkSyncRetries  Int              @default(0)
  larkSyncStatus   LarkSyncStatus   @default(PENDING)
  larkSyncedAt     DateTime?
  statusValue      String?
  customerCode     String?
  customerName     String?
  saleChannelName  String?
  invoices         Invoice[]
  branch           Branch?          @relation(fields: [branchId], references: [id])
  customer         Customer?        @relation(fields: [customerId], references: [id])
  saleChannel      SaleChannel?     @relation(fields: [saleChannelId], references: [id])
  soldBy           User?            @relation("OrderSoldBy", fields: [soldById], references: [kiotVietId])
  orderDelivery    OrderDelivery?
  orderDetails     OrderDetail[]
  orderSurcharges  OrderSurcharge[]
  payments         Payment[]
  Branch           Branch[]         @relation("BranchOrders")

  @@index([kiotVietId])
  @@index([code])
  @@index([branchId])
  @@index([customerId])
  @@index([soldById])
  @@index([saleChannelId])
  @@index([lastSyncedAt])
  @@index([larkSyncStatus])
}

model OrderDetail {
  id            Int      @id @default(autoincrement())
  orderId       Int
  productId     Int
  quantity      Float
  price         Decimal  @db.Decimal(15, 2)
  discount      Decimal? @db.Decimal(15, 2)
  discountRatio Float?
  note          String?
  isMaster      Boolean  @default(true)
  productCode   String
  productName   String
  lineNumber    Int?
  order         Order    @relation(fields: [orderId], references: [id])
  product       Product  @relation(fields: [productId], references: [id])

  @@unique([orderId, lineNumber])
  @@index([orderId])
  @@index([productId])
  @@index([orderId, productId])
}

model OrderDelivery {
  id            Int      @id @default(autoincrement())
  orderId       Int      @unique
  deliveryCode  String?
  type          Int?
  price         Decimal? @db.Decimal(15, 2)
  receiver      String?
  contactNumber String?
  address       String?
  locationId    Int?
  locationName  String?
  wardName      String?
  weight        Float?
  length        Float?
  width         Float?
  height        Float?
  order         Order    @relation(fields: [orderId], references: [id])

  @@index([orderId])
}

model OrderSurcharge {
  id            Int        @id @default(autoincrement())
  kiotVietId    BigInt?    @unique
  orderId       Int
  surchargeId   Int?
  surchargeName String?
  surValue      Decimal?   @db.Decimal(15, 2)
  price         Decimal?   @db.Decimal(15, 2)
  createdDate   DateTime   @default(now())
  order         Order      @relation(fields: [orderId], references: [id])
  surcharge     Surcharge? @relation(fields: [surchargeId], references: [id])

  @@index([orderId])
  @@index([surchargeId])
}

model OrderSupplier {
  id                    Int                          @id @default(autoincrement())
  kiotVietId            BigInt                       @unique
  code                  String                       @unique
  orderDate             DateTime
  branchId              Int?
  retailerId            Int?
  userId                BigInt?
  description           String?
  status                Int?
  statusValue           String?
  discountRatio         Float?
  productQty            Float?
  discount              Decimal?                     @db.Decimal(15, 2)
  total                 Decimal                      @db.Decimal(15, 2)
  exReturnSuppliers     Decimal?                     @db.Decimal(15, 2)
  exReturnThirdParty    Decimal?                     @db.Decimal(15, 2)
  totalAmt              Decimal?                     @db.Decimal(15, 2)
  totalQty              Float?
  totalQuantity         Float
  totalProductType      Int?
  subTotal              Decimal                      @db.Decimal(15, 2)
  paidAmount            Decimal?                     @db.Decimal(15, 2)
  toComplete            Boolean                      @default(false)
  viewPrice             Boolean                      @default(false)
  supplierDebt          Decimal?                     @db.Decimal(15, 2)
  supplierOldDebt       Decimal?                     @db.Decimal(15, 2)
  purchaseOrderCodes    String?
  createdBy             BigInt?
  createdDate           DateTime?
  modifiedDate          DateTime                     @updatedAt
  lastSyncedAt          DateTime                     @default(now())
  larkRecordId          String?
  larkSyncStatus        LarkSyncStatus               @default(PENDING)
  larkSyncedAt          DateTime?
  larkSyncRetries       Int                          @default(0)
  branch                Branch?                      @relation(fields: [branchId], references: [id])
  orderSupplierDetails  OrderSupplierDetail[]
  orderSupplierExpenses OrderSupplierExpense[]
  purchaseOrderLinks    OrderSupplierPurchaseOrder[]

  @@index([kiotVietId])
  @@index([code])
  @@index([branchId])
  @@index([status])
  @@index([orderDate])
  @@index([userId])
  @@index([retailerId])
  @@index([lastSyncedAt])
  @@index([larkSyncStatus])
}

model OrderSupplierDetail {
  id                   Int            @id @default(autoincrement())
  kiotVietId           BigInt         @unique
  orderSupplierId      Int?
  productId            Int?
  quantity             Float
  price                Decimal        @db.Decimal(15, 2)
  discount             Decimal?       @db.Decimal(15, 2)
  allocation           Decimal?       @db.Decimal(15, 2)
  description          String?
  orderByNumber        Int?
  allocationSuppliers  Decimal?       @db.Decimal(15, 2)
  allocationThirdParty Decimal?       @db.Decimal(15, 2)
  orderQuantity        Float          @default(0)
  subTotal             Decimal        @db.Decimal(15, 2)
  createdDate          DateTime?
  orderSupplierCode    String?
  productCode          String?
  productName          String?
  larkRecordId         String?
  larkSyncRetries      Int            @default(0)
  larkSyncStatus       LarkSyncStatus @default(PENDING)
  larkSyncedAt         DateTime?
  orderSupplier        OrderSupplier? @relation(fields: [orderSupplierId], references: [id], onDelete: Cascade)
  product              Product?       @relation(fields: [productId], references: [id])

  @@index([orderSupplierId])
  @@index([productId])
  @@index([kiotVietId])
}

model OrderSupplierExpense {
  id                 Int           @id @default(autoincrement())
  kiotVietId         BigInt?       @unique
  orderSupplierId    Int
  form               Int?
  expensesOtherOrder Int?
  expensesOtherCode  String?
  expensesOtherName  String?
  expensesOtherId    Int?
  price              Decimal       @db.Decimal(15, 2)
  isReturnAuto       Boolean?      @default(false)
  exValue            Decimal?      @db.Decimal(15, 2)
  createdDate        DateTime      @default(now())
  orderSupplier      OrderSupplier @relation(fields: [orderSupplierId], references: [id], onDelete: Cascade)

  @@index([orderSupplierId])
  @@index([kiotVietId])
  @@index([expensesOtherId])
}

model OrderSupplierPurchaseOrder {
  id                Int           @id @default(autoincrement())
  orderSupplierId   Int
  purchaseOrderId   Int
  purchaseOrderCode String
  linkOrder         Int?
  isActive          Boolean       @default(true)
  createdDate       DateTime      @default(now())
  lastSyncedAt      DateTime      @default(now())
  orderSupplier     OrderSupplier @relation(fields: [orderSupplierId], references: [id], onDelete: Cascade)
  purchaseOrder     PurchaseOrder @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)

  @@unique([orderSupplierId, purchaseOrderId])
  @@index([orderSupplierId])
  @@index([purchaseOrderId])
  @@index([purchaseOrderCode])
  @@index([isActive])
}

model Invoice {
  id                Int                @id @default(autoincrement())
  kiotVietId        BigInt             @unique
  code              String             @unique
  orderCode         String?
  orderId           Int?
  purchaseDate      DateTime
  branchId          Int?
  soldById          BigInt?
  customerId        Int?
  total             Decimal            @db.Decimal(15, 2)
  totalPayment      Decimal            @db.Decimal(15, 2)
  discount          Decimal?           @db.Decimal(15, 2)
  discountRatio     Float?
  status            Int
  description       String?
  usingCod          Boolean            @default(false)
  saleChannelId     Int?
  isApplyVoucher    Boolean            @default(false)
  retailerId        Int?
  createdDate       DateTime?
  modifiedDate      DateTime?
  lastSyncedAt      DateTime           @default(now())
  larkRecordId      String?
  larkSyncRetries   Int                @default(0)
  larkSyncStatus    LarkSyncStatus     @default(PENDING)
  larkSyncedAt      DateTime?
  customerCode      String?
  customerName      String?
  statusValue       String?
  branch            Branch?            @relation(fields: [branchId], references: [id])
  customer          Customer?          @relation(fields: [customerId], references: [id])
  order             Order?             @relation(fields: [orderId], references: [id])
  saleChannel       SaleChannel?       @relation(fields: [saleChannelId], references: [id])
  soldBy            User?              @relation("InvoiceSoldBy", fields: [soldById], references: [kiotVietId])
  invoiceDelivery   InvoiceDelivery?
  invoiceDetails    InvoiceDetail[]
  invoiceSurcharges InvoiceSurcharge[]
  payments          Payment[]
  Branch            Branch[]           @relation("BranchInvoices")

  @@index([kiotVietId])
  @@index([code])
  @@index([orderId])
  @@index([branchId])
  @@index([customerId])
  @@index([customerCode])
  @@index([customerName])
  @@index([soldById])
  @@index([saleChannelId])
  @@index([lastSyncedAt])
  @@index([larkSyncStatus])
}

model InvoiceDetail {
  id            Int      @id @default(autoincrement())
  invoiceId     Int
  productId     Int
  quantity      Float
  price         Decimal  @db.Decimal(15, 2)
  discount      Decimal? @db.Decimal(15, 2)
  discountRatio Float?
  note          String?
  serialNumbers String?
  subTotal      Decimal  @db.Decimal(15, 2)
  lineNumber    Int?
  productCode   String?
  productName   String?
  invoice       Invoice  @relation(fields: [invoiceId], references: [id])
  product       Product  @relation(fields: [productId], references: [id])

  @@unique([invoiceId, lineNumber])
  @@index([invoiceId])
  @@index([productId])
  @@index([invoiceId, productId])
}

model InvoiceDelivery {
  id              Int      @id @default(autoincrement())
  invoiceId       Int?     @unique
  deliveryCode    String?
  status          Int
  type            Int?
  price           Decimal? @db.Decimal(15, 2)
  receiver        String?
  contactNumber   String?
  address         String?
  locationId      Int?
  locationName    String?
  wardName        String?
  usingPriceCod   Boolean  @default(false)
  priceCodPayment Decimal? @db.Decimal(15, 2)
  weight          Float?
  length          Float?
  width           Float?
  height          Float?
  invoice         Invoice? @relation(fields: [invoiceId], references: [id])

  @@index([invoiceId])
}

model InvoiceSurcharge {
  id            Int        @id @default(autoincrement())
  kiotVietId    BigInt?    @unique
  invoiceId     Int
  surchargeId   Int?
  surchargeName String?
  surValue      Decimal?   @db.Decimal(15, 2)
  price         Decimal?   @db.Decimal(15, 2)
  createdDate   DateTime   @default(now())
  invoice       Invoice    @relation(fields: [invoiceId], references: [id])
  surcharge     Surcharge? @relation(fields: [surchargeId], references: [id])

  @@index([invoiceId])
  @@index([surchargeId])
}

model Payment {
  id              Int            @id @default(autoincrement())
  kiotVietId      BigInt?        @unique
  code            String?
  amount          Decimal        @db.Decimal(15, 2)
  method          String
  status          Int?
  transDate       DateTime
  accountId       Int?
  bankAccountInfo String?
  invoiceId       Int?
  orderId         Int?
  returnId        Int?
  purchaseOrderId Int?
  description     String?
  createdDate     DateTime?
  statusValue     String?
  bankAccount     BankAccount?   @relation(fields: [accountId], references: [id])
  invoice         Invoice?       @relation(fields: [invoiceId], references: [id])
  order           Order?         @relation(fields: [orderId], references: [id])
  purchaseOrder   PurchaseOrder? @relation(fields: [purchaseOrderId], references: [id])
  return          Return?        @relation(fields: [returnId], references: [id])

  @@index([invoiceId])
  @@index([orderId])
  @@index([returnId])
  @@index([purchaseOrderId])
  @@index([accountId])
  @@index([transDate])
}

model Surcharge {
  id                Int                @id @default(autoincrement())
  kiotVietId        Int                @unique
  code              String?
  name              String
  valueRatio        Float?
  value             Decimal?           @db.Decimal(15, 2)
  retailerId        Int?
  isActive          Boolean            @default(true)
  createdDate       DateTime           @default(now())
  modifiedDate      DateTime           @updatedAt
  invoiceSurcharges InvoiceSurcharge[]
  orderSurcharges   OrderSurcharge[]

  @@index([kiotVietId])
}

model BankAccount {
  id            Int        @id @default(autoincrement())
  kiotVietId    Int        @unique
  bankName      String
  accountNumber String?
  retailerId    Int?
  createdDate   DateTime
  // Cashflow      Cashflow[]
  payments      Payment[]

  @@index([kiotVietId])
}

model SaleChannel {
  id          Int       @id @default(autoincrement())
  kiotVietId  Int       @unique
  name        String
  isActive    Boolean   @default(true)
  img         String?
  isNotDelete Boolean   @default(false)
  position    Int?
  retailerId  Int?
  createdDate DateTime  @default(now())
  invoices    Invoice[]
  orders      Order[]

  @@index([kiotVietId])
}

model PurchaseOrder {
  id                 Int                          @id @default(autoincrement())
  kiotVietId         BigInt                       @unique
  code               String                       @unique
  branchId           Int?
  purchaseDate       DateTime?
  discountRatio      Float?
  discount           Decimal?                     @db.Decimal(15, 2)
  total              Decimal                      @db.Decimal(15, 2)
  supplierId         Int?
  purchaseById       BigInt?
  paidAmount         Decimal?                     @db.Decimal(15, 2)
  retailerId         Int?
  createdDate        DateTime?
  modifiedDate       DateTime?                    @updatedAt
  lastSyncedAt       DateTime                     @default(now())
  branchName         String?
  description        String?
  larkRecordId       String?
  larkSyncRetries    Int                          @default(0)
  larkSyncStatus     LarkSyncStatus               @default(PENDING)
  larkSyncedAt       DateTime?
  partnerType        String?
  purchaseName       String?
  status             Int?
  supplierCode       String?
  supplierName       String?
  totalPayment       Decimal?                     @db.Decimal(15, 2)
  exReturnSuppliers  Decimal?                     @db.Decimal(15, 2)
  exReturnThirdParty Decimal?                     @db.Decimal(15, 2)
  orderSupplierLinks OrderSupplierPurchaseOrder[]
  payments           Payment[]
  branch             Branch?                      @relation(fields: [branchId], references: [id])
  supplier           Supplier?                    @relation(fields: [supplierId], references: [id])
  details            PurchaseOrderDetail[]
  surcharges         PurchaseOrderSurcharge[]

  @@index([kiotVietId])
  @@index([code])
  @@index([branchId])
  @@index([supplierId])
  @@index([status])
  @@index([purchaseDate])
  @@index([lastSyncedAt])
  @@index([larkSyncStatus])
}

model PurchaseOrderDetail {
  id                Int                        @id @default(autoincrement())
  purchaseOrderId   Int?
  productId         Int?
  quantity          Float
  price             Decimal                    @db.Decimal(15, 2)
  discount          Decimal?                   @db.Decimal(15, 2)
  serialNumbers     String?
  productCode       String?
  productName       String?
  purchaseOrderCode String?
  lineNumber        Int?
  larkRecordId      String?
  larkSyncRetries   Int                        @default(0)
  larkSyncStatus    LarkSyncStatus             @default(PENDING)
  larkSyncedAt      DateTime?
  uniqueKey         String?                    @unique
  product           Product?                   @relation(fields: [productId], references: [id])
  purchaseOrder     PurchaseOrder?             @relation(fields: [purchaseOrderId], references: [id])
  batchExpires      PurchaseOrderDetailBatch[]

  @@unique([purchaseOrderId, lineNumber])
  @@index([purchaseOrderId])
  @@index([productId])
  @@index([purchaseOrderId, productId])
  @@index([larkSyncStatus])
  @@index([larkRecordId])
}

model PurchaseOrderDetailBatch {
  id                    Int                 @id @default(autoincrement())
  kiotVietId            BigInt?             @unique
  purchaseOrderDetailId Int
  productBatchExpireId  Int
  quantity              Float
  createdDate           DateTime            @default(now())
  purchaseOrderDetail   PurchaseOrderDetail @relation(fields: [purchaseOrderDetailId], references: [id])

  @@unique([purchaseOrderDetailId, productBatchExpireId])
  @@index([purchaseOrderDetailId])
  @@index([productBatchExpireId])
}

model PurchaseOrderSurcharge {
  id                Int           @id @default(autoincrement())
  kiotVietId        BigInt?       @unique
  purchaseOrderId   Int
  code              String?
  name              String
  value             Decimal?      @db.Decimal(15, 2)
  valueRatio        Decimal?      @db.Decimal(5, 2)
  isSupplierExpense Boolean       @default(false)
  type              Int?
  createdDate       DateTime      @default(now())
  purchaseOrder     PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])

  @@index([purchaseOrderId])
}

model Transfer {
  id                Int              @id @default(autoincrement())
  kiotVietId        BigInt           @unique
  code              String           @unique
  status            Int
  transferredDate   DateTime?
  receivedDate      DateTime?
  createdById       BigInt?
  fromBranchId      Int
  toBranchId        Int
  noteBySource      String?
  noteByDestination String?
  retailerId        Int?
  createdDate       DateTime         @default(now())
  modifiedDate      DateTime         @updatedAt
  lastSyncedAt      DateTime         @default(now())
  fromBranch        Branch           @relation("SourceBranch", fields: [fromBranchId], references: [id])
  toBranch          Branch           @relation("DestinationBranch", fields: [toBranchId], references: [id])
  details           TransferDetail[]

  @@index([kiotVietId])
  @@index([code])
  @@index([fromBranchId])
  @@index([toBranchId])
}

model TransferDetail {
  id                  Int      @id @default(autoincrement())
  kiotVietId          BigInt?  @unique
  transferId          Int
  productId           Int
  transferredQuantity Float
  receivedQuantity    Float?
  price               Decimal  @db.Decimal(15, 2)
  sendPrice           Decimal? @db.Decimal(15, 2)
  receivePrice        Decimal? @db.Decimal(15, 2)
  product             Product  @relation(fields: [productId], references: [id])
  transfer            Transfer @relation(fields: [transferId], references: [id])

  @@index([transferId])
  @@index([productId])
}

model Return {
  id           Int            @id @default(autoincrement())
  kiotVietId   BigInt         @unique
  code         String         @unique
  invoiceId    Int?
  returnDate   DateTime?
  branchId     Int?
  receivedById BigInt?
  customerId   Int?
  returnTotal  Decimal        @db.Decimal(15, 2)
  totalPayment Decimal        @db.Decimal(15, 2)
  status       Int
  createdDate  DateTime
  modifiedDate DateTime       @updatedAt
  lastSyncedAt DateTime       @default(now())
  branchName   String?
  customerCode String?
  customerName String?
  soldByName   String
  payments     Payment[]
  branch       Branch?        @relation(fields: [branchId], references: [id])
  customer     Customer?      @relation(fields: [customerId], references: [id])
  details      ReturnDetail[]

  @@index([kiotVietId])
  @@index([code])
  @@index([invoiceId])
  @@index([branchId])
  @@index([customerId])
}

model ReturnDetail {
  id          Int     @id @default(autoincrement())
  returnId    Int
  productId   Int
  quantity    Float
  price       Decimal @db.Decimal(15, 2)
  note        String?
  usePoint    Boolean @default(false)
  subTotal    Decimal @db.Decimal(15, 2)
  lineNumber  Int
  productCode String
  productName String
  product     Product @relation(fields: [productId], references: [id])
  return      Return  @relation(fields: [returnId], references: [id])

  @@unique([returnId, lineNumber])
  @@index([returnId])
  @@index([productId])
}

model PriceBook {
  id             Int                      @id @default(autoincrement())
  kiotVietId     Int                      @unique
  name           String
  isActive       Boolean                  @default(true)
  isGlobal       Boolean                  @default(false)
  startDate      DateTime?
  endDate        DateTime?
  forAllCusGroup Boolean                  @default(false)
  forAllUser     Boolean                  @default(false)
  retailerId     Int?
  createdDate    DateTime                 @default(now())
  modifiedDate   DateTime                 @updatedAt
  lastSyncedAt   DateTime                 @default(now())
  branches       PriceBookBranch[]
  customerGroups PriceBookCustomerGroup[]
  details        PriceBookDetail[]
  users          PriceBookUser[]

  @@index([kiotVietId])
}

model PriceBookDetail {
  id            Int        @id @default(autoincrement())
  priceBookId   Int?
  productId     Int
  price         Decimal    @db.Decimal(15, 2)
  lastSyncedAt  DateTime   @default(now())
  lineNumber    Int?
  priceBookName String?
  productName   String?
  priceBook     PriceBook? @relation(fields: [priceBookId], references: [id])
  product       Product    @relation(fields: [productId], references: [id])

  @@unique([productId, lineNumber])
  @@index([priceBookId])
  @@index([productId])
}

model PriceBookBranch {
  id           Int       @id @default(autoincrement())
  kiotVietId   BigInt?
  priceBookId  Int
  branchId     Int?
  branchName   String?
  retailerId   Int?
  lineNumber   Int
  lastSyncedAt DateTime  @default(now())
  branch       Branch?   @relation(fields: [branchId], references: [id])
  priceBook    PriceBook @relation(fields: [priceBookId], references: [id])

  @@unique([priceBookId, lineNumber])
  @@index([priceBookId])
  @@index([branchId])
}

model PriceBookCustomerGroup {
  id                Int            @id @default(autoincrement())
  kiotVietId        BigInt?
  priceBookId       Int
  retailerId        Int?
  lineNumber        Int
  customerGroupId   Int?
  customerGroupName String?
  lastSyncedAt      DateTime       @default(now())
  CustomerGroup     CustomerGroup? @relation(fields: [customerGroupId], references: [id])
  priceBook         PriceBook      @relation(fields: [priceBookId], references: [id])

  @@unique([priceBookId, lineNumber])
  @@index([priceBookId])
  @@index([customerGroupId])
}

model PriceBookUser {
  id           Int       @id @default(autoincrement())
  kiotVietId   BigInt?
  priceBookId  Int
  userId       BigInt?
  userName     String?
  lineNumber   Int
  lastSyncedAt DateTime  @default(now())
  priceBook    PriceBook @relation(fields: [priceBookId], references: [id])
  user         User?     @relation(fields: [userId], references: [kiotVietId])

  @@unique([priceBookId, lineNumber])
  @@index([priceBookId])
  @@index([userId])
}

model TradeMark {
  id           Int      @id @default(autoincrement())
  kiotVietId   Int      @unique
  name         String
  retailerId   Int?
  createdDate  DateTime @default(now())
  modifiedDate DateTime @updatedAt
  lastSyncedAt DateTime @default(now())

  products     Product[]

  @@index([kiotVietId])
}

model Supplier {
  id                         Int             @id @default(autoincrement())
  kiotVietId                 BigInt          @unique
  code                       String          @unique
  name                       String
  contactNumber              String?
  email                      String?
  address                    String?
  locationName               String?
  wardName                   String?
  organization               String?
  taxCode                    String?
  comments                   String?
  isActive                   Boolean?        @default(true)
  debt                       Decimal?        @db.Decimal(15, 2)
  totalInvoiced              Decimal?        @db.Decimal(15, 2)
  totalInvoicedWithoutReturn Decimal?        @db.Decimal(15, 2)
  retailerId                 Int?
  branchId                   Int?
  createdDate                DateTime?
  modifiedDate               DateTime?       @updatedAt
  lastSyncedAt               DateTime        @default(now())
  groups                     String?
  larkRecordId               String?
  larkSyncRetries            Int             @default(0)
  larkSyncStatus             LarkSyncStatus  @default(PENDING)
  larkSyncedAt               DateTime?
  purchaseOrders             PurchaseOrder[]

  @@index([kiotVietId])
  @@index([code])
}

model Location {
  id           Int      @id @default(autoincrement())
  kiotVietId   Int      @unique
  name         String
  normalName   String?
  lastSyncedAt DateTime @default(now())
  wards        Ward[]

  @@index([kiotVietId])
}

model Ward {
  id           Int      @id @default(autoincrement())
  kiotVietId   Int      @unique
  name         String
  locationId   Int
  lastSyncedAt DateTime @default(now())
  location     Location @relation(fields: [locationId], references: [id])

  @@index([kiotVietId])
  @@index([locationId])
}

model VoucherCampaign {
  id                       Int                       @id @default(autoincrement())
  kiotVietId               Int                       @unique
  code                     String
  name                     String
  isActive                 Boolean                   @default(true)
  startDate                DateTime
  endDate                  DateTime
  expireTime               Int?
  prereqPrice              Decimal?                  @db.Decimal(15, 2)
  quantity                 Int
  price                    Decimal                   @db.Decimal(15, 2)
  useVoucherCombineInvoice Boolean                   @default(false)
  isGlobal                 Boolean                   @default(false)
  forAllCusGroup           Boolean                   @default(false)
  forAllUser               Boolean                   @default(false)
  retailerId               Int?
  createdDate              DateTime                  @default(now())
  modifiedDate             DateTime                  @updatedAt
  lastSyncedAt             DateTime                  @default(now())
  vouchers                 Voucher[]
  branches                 VoucherCampaignBranch[]
  categories               VoucherCampaignCategory[]
  products                 VoucherCampaignProduct[]
  users                    VoucherCampaignUser[]

  @@index([kiotVietId])
}

model VoucherCampaignProduct {
  id         Int             @id @default(autoincrement())
  campaignId Int
  productId  Int
  campaign   VoucherCampaign @relation(fields: [campaignId], references: [id])
  product    Product         @relation(fields: [productId], references: [id])

  @@unique([campaignId, productId])
  @@index([campaignId])
  @@index([productId])
}

model VoucherCampaignCategory {
  id         Int             @id @default(autoincrement())
  campaignId Int
  categoryId Int
  campaign   VoucherCampaign @relation(fields: [campaignId], references: [id])
  category   Category        @relation(fields: [categoryId], references: [id])

  @@unique([campaignId, categoryId])
  @@index([campaignId])
  @@index([categoryId])
}

model VoucherCampaignBranch {
  id         Int             @id @default(autoincrement())
  campaignId Int
  branchId   Int
  branch     Branch          @relation(fields: [branchId], references: [id])
  campaign   VoucherCampaign @relation(fields: [campaignId], references: [id])

  @@unique([campaignId, branchId])
  @@index([campaignId])
  @@index([branchId])
}

model VoucherCampaignUser {
  id         Int             @id @default(autoincrement())
  campaignId Int
  userId     BigInt
  campaign   VoucherCampaign @relation(fields: [campaignId], references: [id])
  user       User            @relation(fields: [userId], references: [kiotVietId])

  @@unique([campaignId, userId])
  @@index([campaignId])
  @@index([userId])
}

model Voucher {
  id                Int             @id @default(autoincrement())
  kiotVietId        Int             @unique
  code              String          @unique
  voucherCampaignId Int
  releaseDate       DateTime?
  expireDate        DateTime?
  usedDate          DateTime?
  status            Int
  sellType          Int
  price             Decimal         @db.Decimal(15, 2)
  partnerType       String?
  partnerId         BigInt?
  partnerName       String?
  retailerId        Int?
  createdDate       DateTime        @default(now())
  lastSyncedAt      DateTime        @default(now())
  voucherCampaign   VoucherCampaign @relation(fields: [voucherCampaignId], references: [id])

  @@index([kiotVietId])
  @@index([code])
  @@index([voucherCampaignId])
}

model Settings {
  id                         Int      @id @default(autoincrement())
  retailerId                 Int      @unique
  managerCustomerByBranch    Boolean  @default(false)
  allowOrderWhenOutStock     Boolean  @default(false)
  allowSellWhenOrderOutStock Boolean  @default(false)
  allowSellWhenOutStock      Boolean  @default(false)
  lastSyncedAt               DateTime @default(now())
}

model SyncLog {
  id           Int      @id @default(autoincrement())
  entityType   String
  entityId     String
  operation    String
  status       String
  errorMessage String?
  createdDate  DateTime @default(now())

  @@index([entityType, entityId])
  @@index([status])
  @@index([createdDate])
}

model Webhook {
  id           Int      @id @default(autoincrement())
  kiotVietId   Int      @unique
  type         String
  url          String
  isActive     Boolean  @default(true)
  description  String?
  secret       String?
  retailerId   Int?
  createdDate  DateTime @default(now())
  modifiedDate DateTime @updatedAt

  @@index([kiotVietId])
  @@index([type])
}

model Cashflow {
  id                        Int          @id @default(autoincrement())
  kiotVietId                BigInt       @unique
  code                      String       @unique
  userId                    Int?
  address                   String?
  locationName              String?
  wardName                  String?
  contactNumber             String?
  status                    Int?
  createdBy                 BigInt?
  usedForFinancialReporting Int?
  // accountName               String?
  branchName                String?
  partnerName               String?
  userName                  String?
  accountId                 Int?
  origin                    String?
  cashFlowGroupId           Int?
  cashGroup                 String?
  statusValue               String?
  method                    String?
  partnerType               String?
  partnerId                 BigInt?
  branchId                  Int?
  retailerId                Int
  transDate                 DateTime?
  amount                    Decimal?      @db.Decimal(15, 2)
  description               String?
  lastSyncedAt              DateTime     @default(now())
  // bankAccount               BankAccount? @relation(fields: [accountId], references: [id])
  branch                    Branch?      @relation(fields: [branchId], references: [id])
  // user                      User? @relation(fields: [userId], references: [id])

  @@index([kiotVietId])
  @@index([branchId])
  @@index([partnerType])
  @@index([transDate])
  @@index([accountId])
}

model SyncControl {
  id                Int       @id @default(autoincrement())
  name              String    @unique
  entities          String[]
  isRunning         Boolean   @default(false)
  isEnabled         Boolean   @default(true)
  startedAt         DateTime?
  completedAt       DateTime?
  progress          Json?
  completedEntities String[]
  currentEntity     String?
  syncMode          String
  status            String
  error             String?
  lastRunAt         DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([isRunning, status])
}

enum LarkSyncStatus {
  PENDING
  SYNCED
  FAILED
  SKIP
}
